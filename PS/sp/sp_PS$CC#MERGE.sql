USE KIPP_NJ
GO

ALTER PROCEDURE sp_PS$CC#MERGE AS

BEGIN

  IF OBJECT_ID(N'tempdb..#CC_UPDATE') IS NOT NULL
  BEGIN
				  DROP TABLE [#CC_UPDATE]
  END;

  WITH cc_update AS (
    SELECT *
          ,KIPP_NJ.dbo.fn_DateToSY(DATEENROLLED) AS academic_year          
          ,CASE
            WHEN sectionid < 0 THEN NULL
            ELSE ROW_NUMBER() OVER(
                   PARTITION BY studentid, course_number, KIPP_NJ.dbo.fn_DateToSY(DATEENROLLED)
                     ORDER BY dateenrolled DESC, dateleft DESC) 
           END AS rn
    FROM OPENQUERY(PS_TEAM,'
      SELECT ATTENDANCE_TYPE_CODE
            ,COURSE_NUMBER
            ,CURRENTABSENCES
            ,CURRENTTARDIES
            ,DATEENROLLED
            ,DATELEFT
            ,DCID
            ,EXPRESSION
            ,FIRSTATTDATE
            ,ID
            ,LASTATTMOD
            ,LASTGRADEUPDATE
            ,ORIGSECTIONID
            ,PERIOD_OBSOLETE
            ,PSGUID
            ,SCHOOLID
            ,SECTION_NUMBER
            ,SECTIONID
            ,STUDENTID
            ,STUDENTSECTENRL_GUID
            ,STUDYEAR
            ,TEACHERID
            ,TERMID
      FROM CC
      WHERE ABS(TERMID) >= 2600 /* UPDATE ANNUALLY */
    ')
   )

  SELECT cc.*
        ,p.ABBREVIATION AS period
  INTO #CC_UPDATE
  FROM cc_update cc
  LEFT OUTER JOIN KIPP_NJ..PS$PERIOD#static p WITH(NOLOCK)
    ON cc.academic_year = p.academic_year
   AND cc.schoolid = p.SCHOOLID
   AND KIPP_NJ.dbo.fn_StripCharacters(cc.expression,'^0-9') = p.PERIOD_NUMBER;

  MERGE KIPP_NJ..PS$CC#static AS TARGET
  USING #cc_update AS SOURCE
     ON TARGET.DCID = SOURCE.DCID        
  WHEN MATCHED THEN
   UPDATE
    SET TARGET.ATTENDANCE_TYPE_CODE = SOURCE.ATTENDANCE_TYPE_CODE
       ,TARGET.COURSE_NUMBER = SOURCE.COURSE_NUMBER
       ,TARGET.CURRENTABSENCES = SOURCE.CURRENTABSENCES
       ,TARGET.CURRENTTARDIES = SOURCE.CURRENTTARDIES
       ,TARGET.DATEENROLLED = SOURCE.DATEENROLLED
       ,TARGET.DATELEFT = SOURCE.DATELEFT
       ,TARGET.DCID = SOURCE.DCID
       ,TARGET.EXPRESSION = SOURCE.EXPRESSION
       ,TARGET.FIRSTATTDATE = SOURCE.FIRSTATTDATE
       ,TARGET.ID = SOURCE.ID
       ,TARGET.LASTATTMOD = SOURCE.LASTATTMOD
       ,TARGET.LASTGRADEUPDATE = SOURCE.LASTGRADEUPDATE
       ,TARGET.ORIGSECTIONID = SOURCE.ORIGSECTIONID
       ,TARGET.PERIOD_OBSOLETE = SOURCE.PERIOD_OBSOLETE
       ,TARGET.PSGUID = SOURCE.PSGUID
       ,TARGET.SCHOOLID = SOURCE.SCHOOLID
       ,TARGET.SECTION_NUMBER = SOURCE.SECTION_NUMBER
       ,TARGET.SECTIONID = SOURCE.SECTIONID
       ,TARGET.STUDENTID = SOURCE.STUDENTID
       ,TARGET.STUDENTSECTENRL_GUID = SOURCE.STUDENTSECTENRL_GUID
       ,TARGET.STUDYEAR = SOURCE.STUDYEAR
       ,TARGET.TEACHERID = SOURCE.TEACHERID
       ,TARGET.TERMID = SOURCE.TERMID
       ,TARGET.academic_year = SOURCE.academic_year
       ,TARGET.period = SOURCE.period
       ,TARGET.rn = SOURCE.rn
  WHEN NOT MATCHED BY TARGET THEN
   INSERT
    (ATTENDANCE_TYPE_CODE
    ,COURSE_NUMBER
    ,CURRENTABSENCES
    ,CURRENTTARDIES
    ,DATEENROLLED
    ,DATELEFT
    ,DCID
    ,EXPRESSION
    ,FIRSTATTDATE
    ,ID
    ,LASTATTMOD
    ,LASTGRADEUPDATE
    ,ORIGSECTIONID
    ,PERIOD_OBSOLETE
    ,PSGUID
    ,SCHOOLID
    ,SECTION_NUMBER
    ,SECTIONID
    ,STUDENTID
    ,STUDENTSECTENRL_GUID
    ,STUDYEAR
    ,TEACHERID
    ,TERMID
    ,academic_year
    ,period
    ,rn)
   VALUES
    (SOURCE.ATTENDANCE_TYPE_CODE
    ,SOURCE.COURSE_NUMBER
    ,SOURCE.CURRENTABSENCES
    ,SOURCE.CURRENTTARDIES
    ,SOURCE.DATEENROLLED
    ,SOURCE.DATELEFT
    ,SOURCE.DCID
    ,SOURCE.EXPRESSION
    ,SOURCE.FIRSTATTDATE
    ,SOURCE.ID
    ,SOURCE.LASTATTMOD
    ,SOURCE.LASTGRADEUPDATE
    ,SOURCE.ORIGSECTIONID
    ,SOURCE.PERIOD_OBSOLETE
    ,SOURCE.PSGUID
    ,SOURCE.SCHOOLID
    ,SOURCE.SECTION_NUMBER
    ,SOURCE.SECTIONID
    ,SOURCE.STUDENTID
    ,SOURCE.STUDENTSECTENRL_GUID
    ,SOURCE.STUDYEAR
    ,SOURCE.TEACHERID
    ,SOURCE.TERMID
    ,SOURCE.academic_year
    ,SOURCE.period
    ,SOURCE.rn)
  WHEN NOT MATCHED BY SOURCE AND TARGET.TERMID >= KIPP_NJ.dbo.fn_Global_Term_ID() THEN
   DELETE;
  --OUTPUT $ACTION, DELETED.*
;

END

GO